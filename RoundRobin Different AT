# Round Robin for different arrival times

at = [0,1,2,4]

bt = [5,4,2,1]
btr = [5,4,2,1]
q = [0]
ptr = 0

tq = 2
timer = 0

n = 4

included = [False]*n
included[0] = True

ct = [0]*n
tat = [0]*n
wt = [0]*n






while(ptr<len(q)):
  if btr[q[ptr]] == 0:
    ptr += 1
  elif btr[q[ptr]] - tq <= 0 :
    timer += btr[q[ptr]]
    btr[q[ptr]] = 0


    currIdx = q[ptr]
    ct[currIdx] = timer
    tat[currIdx] = ct[currIdx] - at[currIdx]
    wt[currIdx] = tat[currIdx] - bt[currIdx] 

    for currIdx in range(currIdx+1,n):
      if not included[currIdx] and  at[currIdx] <= timer:
        included[currIdx] = True
        q.append(currIdx)
        currIdx += 1
    ptr += 1
  else :
    timer += tq
    btr[q[ptr]] -= tq
    currIdx = q[ptr]
    for currIdx in range(currIdx+1,n):
      if not included[currIdx] and  at[currIdx] <= timer:
        included[currIdx] = True
        q.append(currIdx)
        currIdx += 1
    q.append(q[ptr])
    ptr += 1


df = DataFrame({"Pid":[i for i in range(1,n+1)],
                    "AT":at,
                    "BT":bt,
                    "CT":ct,
                    "TAT":tat,
                    "WT":wt})

print("Ready Queue : ",q)
df
